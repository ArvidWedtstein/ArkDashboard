export const schema = gql`
  """
  Representation of Item.
  """
  type Item {
    "Description for id."
    id: BigInt!

    "Description for created_at."
    created_at: DateTime

    "Description for name."
    name: String!

    "Description for description."
    description: String

    "Description for image."
    image: String

    "Description for max_stack."
    max_stack: Float

    "Description for weight."
    weight: Float

    "Description for engram_points."
    engram_points: Float

    "Description for crafting_time."
    crafting_time: Float

    "Description for req_level."
    req_level: BigInt

    "Description for yields."
    yields: Float

    "Description for recipe."
    recipe: JSON

    "Description for stats."
    stats: JSON

    "Description for color."
    color: String

    "Description for crafted_in."
    crafted_in: [String]!

    "Description for effects."
    effects: [String]!
  }

  """
  About queries
  """
  type Query {
    "Fetch Items."
    items: [Item!]! @requireAuth

    "Fetch a Item by id."
    item(id: BigInt!): Item @requireAuth
  }

  """
  Autogenerated input type of InputItem.
  """
  input CreateItemInput {
    "Description for created_at."
    created_at: DateTime

    "Description for name."
    name: String!

    "Description for description."
    description: String

    "Description for image."
    image: String

    "Description for max_stack."
    max_stack: Float

    "Description for weight."
    weight: Float

    "Description for engram_points."
    engram_points: Float

    "Description for crafting_time."
    crafting_time: Float

    "Description for req_level."
    req_level: BigInt

    "Description for yields."
    yields: Float

    "Description for recipe."
    recipe: JSON

    "Description for stats."
    stats: JSON

    "Description for color."
    color: String

    "Description for crafted_in."
    crafted_in: [String]!

    "Description for effects."
    effects: [String]!
  }

  """
  Autogenerated input type of UpdateItem.
  """
  input UpdateItemInput {
    "Description for created_at."
    created_at: DateTime

    "Description for name."
    name: String

    "Description for description."
    description: String

    "Description for image."
    image: String

    "Description for max_stack."
    max_stack: Float

    "Description for weight."
    weight: Float

    "Description for engram_points."
    engram_points: Float

    "Description for crafting_time."
    crafting_time: Float

    "Description for req_level."
    req_level: BigInt

    "Description for yields."
    yields: Float

    "Description for recipe."
    recipe: JSON

    "Description for stats."
    stats: JSON

    "Description for color."
    color: String

    "Description for crafted_in."
    crafted_in: [String]!

    "Description for effects."
    effects: [String]!
  }

  """
  About mutations
  """
  type Mutation {
    "Creates a new Item."
    createItem(input: CreateItemInput!): Item! @requireAuth

    "Updates an existing Item."
    updateItem(id: BigInt!, input: UpdateItemInput!): Item! @requireAuth

    "Deletes an existing Item."
    deleteItem(id: BigInt!): Item! @requireAuth
  }
`
